# -*- coding: utf-8 -*-
"""keras - mnist.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mhLllHBzRlvYCVaqrJR66UsQs21lz2xz
"""

import tensorflow as tf
mnist = tf.keras.datasets.mnist

import pandas as pd

(X_train, y_train), (X_test, y_test) = mnist.load_data()
X_train, X_test = X_train / 255, X_test / 255

X_train.shape

model = tf.keras.Sequential([tf.keras.layers.Flatten(),                           #input
                             tf.keras.layers.Dense(128, activation=tf.nn.tanh),    #1st hidden layer
                             tf.keras.layers.Dense(64, activation=tf.nn.relu),     #2nd hidden layer
                             tf.keras.layers.Dense(16, activation=tf.nn.sigmoid),  #3rd hidden layer
                             tf.keras.layers.Dropout(0.2), 
                             tf.keras.layers.Dense(10, activation=tf.nn.softmax)  #output
                            ])

model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])

model.fit(X_train, y_train, epochs=100)

val_loss, val_acc = model.evaluate(X_test, y_test)

model.save('mnist99.model')

new = tf.keras.models.load_model('mnist.model')

y_pred = new.predict(X_test)

val, acc = model.evaluate(X_train, y_train)